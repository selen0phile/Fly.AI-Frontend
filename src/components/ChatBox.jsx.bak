import React from "react";
import { ChatFeed, ChatBubble, BubbleGroup, Message } from "react-chat-ui";
import "../App.css"
import ImageSearchIcon from '@mui/icons-material/ImageSearch';
import KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';
import SendIcon from '@mui/icons-material/Send';
import { Box, TextField } from "@mui/material";

const style = {
  text: {
    fontSize: 16
  },
  userBubble: {
    wordWrap: 'break-word',
    backgroundColor: "red",
  },
  chatbubble: {
    borderRadius: 30,
    padding: 10,
    wordWrap: "break-word",
    backgroundColor: "#2b2b2b"
  }
}

const users = {
  0: "You",
  Mark: "Mark",
  2: "Evan",
  gpt: "chat-gpt"
};


class ChatBox extends React.Component {
  constructor() {
    super();
    this.state = {
      messages: [
        new Message({ id: "Mary", message: "Hey guys!", senderName: "Mary" }),
        new Message({
          id: 2,
          message: (
            <p>
              <span>11:50:</span>Hey! Eve here. react-chat-ui is pretty dooope.
            </p>
          ),
          senderName: "Eve"
        })
      ],
      useCustomBubble: false,
      curr_user: 0
    };
  }

  onPress(user) {
    this.setState({ curr_user: user });
  }

  onMessageSubmit(e) {
    const input = this.message;
    e.preventDefault();
    if (!input.value) {
      return false;
    }
    this.pushMessage(this.state.curr_user, input.value);
    input.value = "";
    return true;
  }

  onMessageSubmit_() {
    alert(this.message.value)
    if (!input.value) {
      return false;
    }
    this.pushMessage(this.state.curr_user, input.value);
    input.value = "";
    return true;
  }

  pushMessage(recipient, message) {
    const prevState = this.state;
    const newMessage = new Message({
      id: recipient,
      message,
      senderName: users[recipient]
    });
    prevState.messages.push(newMessage);
    this.setState(this.state);
  }

  render() {
    return (
      <div className="container">
        <div className="chatfeed-wrapper">
          <ChatFeed bubbleStyles={style}
            chatBubble={this.state.useCustomBubble && customBubble}
            maxHeight={750}
            messages={this.state.messages} // Boolean: list of message objects
            showSenderName
          />

        </div>
        <div className="rowBar">
          <ImageSearchIcon style={{ fontSize: '2em', paddingLeft: "10px" }} />
          <form style={{ display: "flex", flexDirection: "row", alignItems: "center" }} onSubmit={e => this.onMessageSubmit(e)}>
            <Box>
              <TextField
                ref={m => {
                  this.message = m;
                }}
                placeholder="Type a message..."
                className="message-input"
                onKeyDown={(ev) => {
                  if (ev.key === 'Enter') {
                    this.onMessageSubmit_()
                  }
                }}
              />
            </Box>
            <button style={{ backgroundColor: "transparent", border: "none", color: "white" }} type="submit"><SendIcon style={{ fontSize: '2em', paddingLeft: "5px" }} /></button>
          </form>

        </div>
      </div>
    );
  }
}

export default ChatBox;

